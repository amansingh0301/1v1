[{"C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\index.js":"1","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\App.js":"2","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Navigator.js":"3","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\Header.js":"4","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Pages\\Page1.js":"5","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Pages\\Page3.js":"6","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Pages\\Page2.js":"7","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Routes\\ProtectedRoute.js":"8","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Routes\\SimpleRoute.js":"9","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\Login.js":"10","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\Activity.js":"11","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\Register.js":"12","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\methods.js":"13","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\Timer.js":"14","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\Points.js":"15","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\Editor.js":"16","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\StartContest.js":"17","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\GotoLogin.js":"18","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\editorUtils.js":"19","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\ProblemFilters.js":"20","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\loginMethods\\loginUtils.js":"21"},{"size":280,"mtime":1612335799473,"results":"22","hashOfConfig":"23"},{"size":619,"mtime":1612335799410,"results":"24","hashOfConfig":"23"},{"size":689,"mtime":1612335799443,"results":"25","hashOfConfig":"23"},{"size":689,"mtime":1612335799420,"results":"26","hashOfConfig":"23"},{"size":860,"mtime":1612335799446,"results":"27","hashOfConfig":"23"},{"size":11116,"mtime":1612337957430,"results":"28","hashOfConfig":"23"},{"size":266,"mtime":1612335799447,"results":"29","hashOfConfig":"23"},{"size":681,"mtime":1612335799469,"results":"30","hashOfConfig":"23"},{"size":746,"mtime":1612335799471,"results":"31","hashOfConfig":"23"},{"size":2699,"mtime":1612335799423,"results":"32","hashOfConfig":"23"},{"size":986,"mtime":1612335799413,"results":"33","hashOfConfig":"23"},{"size":2778,"mtime":1612335799428,"results":"34","hashOfConfig":"23"},{"size":20119,"mtime":1612434768922,"results":"35","hashOfConfig":"23"},{"size":125,"mtime":1612335799431,"results":"36","hashOfConfig":"23"},{"size":355,"mtime":1612335799424,"results":"37","hashOfConfig":"23"},{"size":5605,"mtime":1612337918116,"results":"38","hashOfConfig":"23"},{"size":5760,"mtime":1612337937843,"results":"39","hashOfConfig":"23"},{"size":496,"mtime":1612335799419,"results":"40","hashOfConfig":"23"},{"size":1188,"mtime":1612335799439,"results":"41","hashOfConfig":"23"},{"size":2685,"mtime":1612335799426,"results":"42","hashOfConfig":"23"},{"size":1304,"mtime":1612335799442,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"x3prxp",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"46"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},"C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\index.js",[],["101","102"],"C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\App.js",[],"C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Navigator.js",["103","104"],"import Page1 from \"./Pages/Page1\";\r\nimport Page2 from \"./Pages/Page2\";\r\nimport Page3 from \"./Pages/Page3\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport ProtectedRoute from \"./Routes/ProtectedRoute\";\r\nimport SimpleRoute from \"./Routes/SimpleRoute\";\r\n\r\nfunction Navigator(props) {\r\n  console.log(\"in Navigator : \", props);\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <SimpleRoute path=\"/\" exact component={Page1} />\r\n        <ProtectedRoute path=\"/ready\" exact component={Page2} />\r\n        <ProtectedRoute path=\"/contest\" exact component={Page3} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Navigator;\r\n","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\Header.js",["105","106","107","108","109"],"import React, { Component, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  aboutbtn: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"2rem\",\r\n  },\r\n}));\r\n\r\nfunction Header() {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography variant=\"h2\">CodingDuel</Typography>\r\n        <InfoIcon className={classes.aboutbtn} />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\nexport default Header;\r\n","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Pages\\Page1.js",[],"C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Pages\\Page3.js",["110","111","112","113","114","115","116","117","118","119","120","121"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"../Components/css/App.css\";\r\nimport Editor from \"../Components/Editor\";\r\nimport Activity from \"../Components/Activity\";\r\nimport { Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport Timer from \"../Components/Timer\";\r\nimport Points from \"../Components/Points\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport methods from \"../methods\";\r\n\r\nconst MathJax = window.MathJax;\r\n// var HOST = window.location.origin.replace(/^http/, 'ws')\r\nvar url=\"wss://codingduel.herokuapp.com\";\r\n// var url=\"ws://localhost:4000\";\r\nvar connection;\r\nvar counter = 1;\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  logoutbtn: {\r\n    position: \"absolute\",\r\n    right: \"2rem\",\r\n    marginTop: \"1rem\",\r\n  },\r\n  textStyle: {\r\n    textAlign: \"left\",\r\n  },\r\n}));\r\n\r\nfunction Contest(props) {\r\n  const [problems, setProblems] = useState();\r\n  const [currentProblem, setCurrentProblem] = useState();\r\n  const [activities, setActivities] = useState([]);\r\n\r\n  function start(url) {\r\n    connection = new WebSocket(url);\r\n    connection.onclose = function () {\r\n      // Try to reconnect in 3 seconds\r\n      setTimeout(function () {\r\n        start(url);\r\n      }, 3000);\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    connection = new WebSocket(url);\r\n    connection.onopen = function () {\r\n      connection.send(\r\n        JSON.stringify({\r\n          type: \"get_Question\",\r\n          roomName: window.$roomName,\r\n        })\r\n      );\r\n    };\r\n\r\n    connection.onclose = function () {\r\n      // Try to reconnect in 3 seconds\r\n      setTimeout(function () {\r\n        start(url);\r\n      }, 3000);\r\n    };\r\n\r\n    connection.onmessage = function (message) {\r\n      const fromServer = JSON.parse(message.data);\r\n      if (fromServer.type != undefined && fromServer.type == \"activity\") {\r\n        // parse activities\r\n        var parsedMessage = fromServer;\r\n        var msg = \"\";\r\n        var today = new Date();\r\n        var time =\r\n          today.getHours() +\r\n          \":\" +\r\n          today.getMinutes() +\r\n          \":\" +\r\n          today.getSeconds();\r\n        if (window.$name === parsedMessage.username) {\r\n          if (parsedMessage.runOrSubmit == \"submit\") {\r\n            msg = `You submitted your code at ${time}`;\r\n          } else {\r\n            msg = `You ran your code on a sample input at ${time}`;\r\n          }\r\n        } else {\r\n          if (parsedMessage.runOrSubmit == \"submit\") {\r\n            msg = `${parsedMessage.username} submitted his code at ${time}`;\r\n          } else {\r\n            msg = `${parsedMessage.username} ran his code on a sample input at ${time}`;\r\n          }\r\n        }\r\n        setActivities((oldActivity) => [...oldActivity, msg]);\r\n      } else if (fromServer.type != undefined && fromServer.type == \"message\") {\r\n        console.log(fromServer.msg);\r\n        setActivities((oldActivity) => [\r\n          ...oldActivity,\r\n          `${fromServer.name} : ${fromServer.msg}`,\r\n        ]);\r\n      } else if (fromServer.type == \"got_score\") {\r\n        if (window.$name != fromServer.name) {\r\n          const opponentPoints = fromServer.score;\r\n          try {\r\n            document.getElementById(\"opponentPoints\").innerText =\r\n              \"| \" + opponentPoints;\r\n          } catch (err) {\r\n            alert(\"cannot set points\");\r\n          }\r\n        }\r\n      } else {\r\n        const fetchedProblems = fromServer.problems;\r\n        setProblems(fetchedProblems);\r\n        setCurrentProblem(fetchedProblems[0].questionBody);\r\n        startTimer(fromServer.time * 60);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"RAN ATHJAX\");\r\n    try {\r\n      MathJax.typeset();\r\n    } catch (err) {\r\n      alert(\"Cannot render problem correctly, try again.\");\r\n    }\r\n  }, [currentProblem]);\r\n\r\n  function handleClick(e) {\r\n    counter = 1;\r\n    var selection = e.target.textContent;\r\n    const res = problems.filter(\r\n      (problem) => problem.questionBody.questionName === selection\r\n    );\r\n    document.querySelector(\"textarea[name=problemCode\").value =\r\n      res[0].questionDetails.contestId + res[0].questionDetails.index;\r\n\r\n    setCurrentProblem(res[0].questionBody);\r\n    var inputTestCase = res[0].questionBody.questionSampleTestCases[0].input;\r\n    var regex = /<br\\s*[\\/]?>/gi;\r\n    inputTestCase = inputTestCase.replace(regex, \"\\n\");\r\n    document.querySelector('textarea[name=\"inputArea\"]').value = inputTestCase;\r\n  }\r\n\r\n  const classes = useStyles();\r\n  function startTimer(duration) {\r\n    const display = document.getElementById(\"timer\");\r\n    var start = Date.now(),\r\n      diff,\r\n      minutes,\r\n      seconds;\r\n    function timer() {\r\n      diff = duration - (((Date.now() - start) / 1000) | 0);\r\n      minutes = (diff / 60) | 0;\r\n      seconds = diff % 60 | 0;\r\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n      try {\r\n        display.textContent = minutes + \":\" + seconds;\r\n      } catch (err) {\r\n        alert(\"cannot start timer, try again\");\r\n        return;\r\n      }\r\n\r\n      if (diff <= 0) {\r\n        clearInterval(timer);\r\n        alert(\"Contest Ends\");\r\n        return;\r\n      }\r\n    }\r\n    timer();\r\n    var timer = setInterval(timer, 1000);\r\n  }\r\n\r\n  function sendMessage() {\r\n    connection.send(\r\n      JSON.stringify({\r\n        type: \"message\",\r\n        name: window.$name,\r\n        roomName: window.$roomName,\r\n        msg: document.getElementById(\"message\").value,\r\n      })\r\n    );\r\n  }\r\n\r\n  const logout = () => {\r\n    methods.videoStop();\r\n    localStorage.removeItem(\"jwtToken\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        <Grid item sm={4}>\r\n          <Grid item sm={12}>\r\n            <Timer />\r\n          </Grid>\r\n          <Grid item sm={12}>\r\n            <Points />\r\n          </Grid>\r\n          {problems &&\r\n            problems.map((problem, index) => {\r\n              return (\r\n                <Grid item sm={12}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={handleClick}\r\n                    value={problem.questionBody.questionName}\r\n                  >\r\n                    <Typography>{problem.questionBody.questionName}</Typography>\r\n                  </Button>\r\n                </Grid>\r\n              );\r\n            })}\r\n          <Grid item xs={12}>\r\n            <Activity messages={activities} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField id=\"message\" label=\"message\" />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button variant=\"contained\" onClick={sendMessage}>\r\n              <Typography>Send</Typography>\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item sm={8}>\r\n          <Link to=\"/\">\r\n            <Button\r\n              id=\"logout-btn\"\r\n              variant=\"contained\"\r\n              onClick={logout}\r\n              className={classes.logoutbtn}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Link>\r\n          <div>\r\n            {currentProblem && (\r\n              <div>\r\n                <Grid item sm={12}>\r\n                  <Typography variant=\"h3\">\r\n                    {currentProblem.questionName}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                  <br />\r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                  <div\r\n                    className={classes.textStyle}\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: currentProblem.questionDiv,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                  <br />\r\n                </Grid>\r\n                <Typography variant=\"h5\" className={classes.textStyle}>\r\n                  Input Format\r\n                </Typography>\r\n                <Grid item sm={12}>\r\n                  <div\r\n                    className={classes.textStyle}\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: currentProblem.questionInputTypeDiv,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                  <br />\r\n                </Grid>\r\n                <Typography variant=\"h5\" className={classes.textStyle}>\r\n                  Output Format\r\n                </Typography>\r\n                <Grid item sm={12}>\r\n                  <div\r\n                    className={classes.textStyle}\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: currentProblem.questionOutputTypeDiv,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                  <br />\r\n                </Grid>\r\n                <Typography variant=\"h5\" className={classes.textStyle}>\r\n                  Sample Test Cases\r\n                </Typography>\r\n                {currentProblem.questionSampleTestCases &&\r\n                  currentProblem.questionSampleTestCases.map((testCase) => {\r\n                    return (\r\n                      // <div>\r\n                      <Grid item container className={classes.textStyle}>\r\n                        <Grid item sm={6}>\r\n                          <Typography\r\n                            variant=\"h6\"\r\n                            className={classes.textStyle}\r\n                          >\r\n                            Input {counter}:\r\n                          </Typography>\r\n                          {\r\n                            <div\r\n                              dangerouslySetInnerHTML={{\r\n                                __html: testCase.input,\r\n                              }}\r\n                            />\r\n                          }\r\n                        </Grid>\r\n                        <Grid item sm={6}>\r\n                          <Typography\r\n                            variant=\"h6\"\r\n                            className={classes.textStyle}\r\n                          >\r\n                            Output {counter++}:\r\n                          </Typography>\r\n                          {\r\n                            <div\r\n                              dangerouslySetInnerHTML={{\r\n                                __html: testCase.output,\r\n                              }}\r\n                            />\r\n                          }\r\n                        </Grid>\r\n                        <Grid item sm={12}>\r\n                          <br />\r\n                        </Grid>\r\n                      </Grid>\r\n                      // </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n            )}\r\n            {/* <Editor /> */}\r\n          </div>\r\n          <Grid\r\n            container\r\n            item\r\n            direction=\"row\"\r\n            justify=\"flex-end\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Editor />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contest;\r\n","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Pages\\Page2.js",["122","123"],"import React, { Component, useEffect } from \"react\";\r\nimport StartContest from \"../Components/StartContest\";\r\nfunction Ready(props) {\r\n  return (\r\n    <div>\r\n      {/* <User /> */}\r\n      <br />\r\n      <StartContest />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Ready;\r\n","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Routes\\ProtectedRoute.js",["124","125","126"],"import React, { Component, useState, useEffect } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport methods from \"../methods\";\r\nimport GotoLogin from \"../Components/GotoLogin\";\r\n\r\nfunction ProtectedRoute({ component: Component, ...rest }) {\r\n  const [refferrer, setRefferrer] = useState(false);\r\n  useEffect(async () => {\r\n    try {\r\n      const response = await methods.check();\r\n      setRefferrer(response);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  }, []);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        refferrer == true ? <Component {...props} /> : <GotoLogin />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Routes\\SimpleRoute.js",["127","128","129"],"import React, { Component, useState, useEffect } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport methods from \"../methods\";\r\n\r\nfunction SimpleRoute({ component: Component, ...rest }) {\r\n  const [refferrer, setRefferrer] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const response = await methods.check().catch((err) => {\r\n        alert(\"Cannot check...login or not server is not running\");\r\n      });\r\n      setRefferrer(response);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        refferrer == true ? <Redirect to=\"/ready\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default SimpleRoute;\r\n","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\Login.js",[],"C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\Activity.js",["130","131","132","133","134","135","136"],"import React, { Component, useState } from \"react\";\nimport {\n  Grid,\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  scrollMenu: {\n    overflowY: \"auto\",\n    height: \"200px\",\n    width: \"auto\",\n    border: \"2px solid black\",\n    margin: \"1rem\",\n    borderRadius:\"1rem\"\n  },\n}));\n\nfunction Activity(props) {\n  console.log(\"Activity : \", props);\n  const classes = useStyles();\n\n  function generateListItem(msg) {\n    return <ListItem>{msg}</ListItem>;\n  }\n\n  return (\n    <div>\n      <List className={classes.scrollMenu}>\n        <ListItem alignItems=\"flex-start\">\n          <ListItemText primary=\"sent a message last \" />\n        </ListItem>\n        {props.messages &&\n          props.messages.map((message) => {\n            return generateListItem(message);\n          })}\n      </List>\n    </div>\n  );\n}\nexport default Activity;\n","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\Register.js",[],"C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\methods.js",["137","138","139","140","141","142","143","144","145","146","147"],"C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\Timer.js",["148","149"],"import React, { Component } from \"react\";\r\n\r\nfunction Timer() {\r\n  return <h1 id=\"timer\"></h1>;\r\n}\r\n\r\nexport default Timer;\r\n","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\Points.js",["150"],"import React, { Component } from \"react\";\r\n\r\nfunction Points() {\r\n  return (\r\n    <div>\r\n      <p style={{ display: \"inline-block\" }} id=\"yourPoints\">\r\n        Your Points |\r\n      </p>\r\n      <p style={{ display: \"inline-block\" }} id=\"opponentPoints\">\r\n        {\" \"}\r\n        | opponent Points\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Points;\r\n","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\Editor.js",["151","152","153","154"],"import \"./css/editor-styles.css\";\nimport { useState, useRef, useEffect } from \"react\";\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/theme-dracula\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport { Grid, MenuItem, Button, ButtonGroup, Select } from \"@material-ui/core\";\nimport editorButtons from \"./editorUtils.js\";\n\nvar yourPoints = 0;\nvar opponentPoints = 0;\nvar connection;\n\nvar map = {};\nmap[\"java\"] = \"java\";\nmap[\"cpp\"] = \"c_cpp\";\nmap[\"pyton3\"] = \"python\";\n\n// var HOST = window.location.origin.replace(/^http/, 'ws')\nvar url=\"wss://codingduel.herokuapp.com\";\n// var url=\"ws://localhost:4000\";\n\nfunction Editor() {\n  const aceRef = useRef();\n  const stdinRef = useRef();\n  const stdoutRef = useRef();\n  const problemCodeRef = useRef();\n  const [language, setLanguage] = useState(\"cpp\");\n\n  useEffect(() => {\n    connection = new WebSocket(url);\n    connection.onopen = function () {\n      connection.send(\n        JSON.stringify({\n          type: \"get_score\",\n          roomName: window.$roomName,\n          name: window.$name,\n        })\n      );\n      connection.onclose = function () {\n        // Try to reconnect in 3 seconds\n        setTimeout(function () {\n          start(url);\n        }, 3000);\n      };\n    };\n    function start(url) {\n      console.log(\"attempting to recnnect...\");\n      connection = new WebSocket(url);\n      connection.onclose = function () {\n        // Try to reconnect in 3 seconds\n        setTimeout(function () {\n          start(url);\n        }, 3000);\n      };\n    }\n    connection.onmessage = (message) => {\n      const data = JSON.parse(message.data);\n      if (data.type == \"score\") {\n        yourPoints = data.score.your;\n        opponentPoints = data.score.opponent;\n      } else if (data.type == \"got_score\") {\n        if (window.$name == data.name) {\n          yourPoints = data.score;\n        } else {\n          opponentPoints = data.score;\n        }\n      }\n      try {\n        document.getElementById(\"yourPoints\").innerText = yourPoints + \" |\";\n        document.getElementById(\"opponentPoints\").innerText =\n          \"| \" + opponentPoints;\n      } catch (err) {\n        alert(\"cannot set points, try again\");\n      }\n    };\n  }, []);\n  async function handleRun() {\n    const userCode = aceRef.current.editor.getValue();\n    const stdin = stdinRef.current.value;\n    var output = await editorButtons.runCode(\n      userCode,\n      stdin,\n      language,\n      window.$roomName,\n      window.$name\n    );\n    stdoutRef.current.value = output;\n  }\n  async function handleSubmit() {\n    const userCode = aceRef.current.editor.getValue();\n    const problemCode = problemCodeRef.current.value;\n    var verdict = await editorButtons.submitCode(\n      userCode,\n      problemCode,\n      language,\n      window.$roomName,\n      window.$name\n    );\n    verdict = JSON.parse(verdict);\n    if (verdict.verdict == \"OK\") {\n      yourPoints += verdict.points;\n      document.getElementById(\"yourPoints\").innerText = yourPoints + \" |\";\n      connection.send(\n        JSON.stringify({\n          type: \"store_score\",\n          roomName: window.$roomName,\n          name: window.$name,\n          score: yourPoints,\n        })\n      );\n    }\n    stdoutRef.current.value = verdict.verdict;\n  }\n  function handleLanguageChange(e) {\n    setLanguage(e.target.value);\n  }\n\n  return (\n    // <div className=\"editor_wrapper\">\n    <Grid container item spacing={3}>\n      <Grid item xs={12}>\n        <AceEditor\n          height=\"600px\"\n          width=\"1000px\"\n          ref={aceRef}\n          mode=\"c_cpp\"\n          theme=\"dracula\"\n          name=\"UNIQUE_ID_OF_DIV\"\n          editorProps={{ $blockScrolling: true }}\n          // highlightActiveLine=\"true\"\n          setOptions={{\n            fontSize: \"16pt\",\n            enableBasicAutocompletion: true,\n            enableLiveAutocompletion: true,\n            // display:\"inline-block\"\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Select\n          name=\"language\"\n          id=\"languageSelector\"\n          className=\"language_selector\"\n          value={language}\n          onChange={handleLanguageChange}\n        >\n          <MenuItem value=\"cpp\">c++</MenuItem>\n          <MenuItem value=\"java\">java</MenuItem>\n          <MenuItem value=\"python3\">python3</MenuItem>\n        </Select>\n        <ButtonGroup>\n          <Button color=\"primary\" variant=\"contained\" onClick={handleRun}>\n            {\" \"}\n            Run{\" \"}\n          </Button>\n          <Button color=\"primary\" variant=\"contained\" onClick={handleSubmit}>\n            {\" \"}\n            Submit{\" \"}\n          </Button>\n        </ButtonGroup>\n      </Grid>\n      <Grid item xs={12}>\n        <textarea\n          placeholder=\"Problem Code\"\n          ref={problemCodeRef}\n          name=\"problemCode\"\n          className=\"problem_code\"\n          cols=\"7\"\n          rows=\"7\"\n        ></textarea>\n      </Grid>\n      <Grid item xs={12}>\n        <textarea\n          placeholder=\"Input\"\n          ref={stdinRef}\n          name=\"inputArea\"\n          className=\"editor_console\"\n          cols=\"10\"\n          rows=\"10\"\n        ></textarea>\n\n        <textarea\n          placeholder=\"Output\"\n          ref={stdoutRef}\n          name=\"outputArea\"\n          className=\"editor_console\"\n          cols=\"10\"\n          rows=\"10\"\n        ></textarea>\n      </Grid>\n    </Grid>\n    // {/* </div> */}\n  );\n}\n\nexport default Editor;\n","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\StartContest.js",["155","156","157","158","159","160","161","162","163","164","165"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport methods from \"../methods\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ProblemFilters from \"./ProblemFilters\";\r\n// var HOST = window.location.origin.replace(/^http/, 'ws')\r\n// console.log(HOST)\r\nvar url=\"wss://codingduel.herokuapp.com\";\r\n// var url=\"ws://localhost:4000\";\r\nvar connection;\r\nvar problems;\r\nvar time;\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\nfunction StartContest() {\r\n  const classes = useStyles();\r\n  const [refferrer, setRefferrer] = useState(false);\r\n  const [roomName, setRoomName] = useState();\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  useEffect(() => console.log(\"changed refferrer : \", refferrer), [refferrer]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      connection = new WebSocket(url);\r\n      connection.onopen = function () {\r\n        console.log(\"open\")\r\n      };\r\n      connection.onclose = function () {\r\n        // Try to reconnect in 3 seconds\r\n        setTimeout(function () {\r\n          start(url);\r\n        }, 3000);\r\n      };\r\n    } catch (err) {\r\n      alert(\"Cannot connect to server\");\r\n    }\r\n  }, []);\r\n\r\n  function start(url) {\r\n    console.log(\"attempting to reconnect...\");\r\n    connection = new WebSocket(url);\r\n    connection.onclose = function () {\r\n      // Try to reconnect in 3 seconds\r\n      setTimeout(function () {\r\n        start(url);\r\n      }, 3000);\r\n    };\r\n  }\r\n\r\n  // admin presses the call button\r\n  function call() {\r\n    window.$roomName = roomName;\r\n    window.$time = 10;\r\n    const data = {\r\n      minDiff: 800,\r\n      maxDiff: 3500,\r\n      minIndex: \"A\",\r\n      maxIndex: \"F\",\r\n      numProblems: 4,\r\n    };\r\n    setIsAdmin(true);\r\n    window.$roomName = roomName;\r\n    try {\r\n      methods.goToVideoCall((e) => {\r\n        window.$roomName = roomName;\r\n        if (e == true) {\r\n          setRefferrer(true);\r\n        }\r\n      }, roomName);\r\n      connection.send(\r\n        JSON.stringify({\r\n          type: \"create_room\",\r\n          roomName: window.$roomName,\r\n          name: window.$name,\r\n          filters: window.hasOwnProperty(\"$filters\") ? window.$filters : null,\r\n          time: window.$time,\r\n        })\r\n      );\r\n      handleData(data);\r\n    } catch (err) {\r\n      alert(\"Please refresh and try again.\");\r\n    }\r\n  }\r\n\r\n  // 'other guy' presses the join button\r\n  function join() {\r\n    window.$roomName = roomName;\r\n    try {\r\n      methods.joinVideoCall((e) => {\r\n        if (e == true) {\r\n          setRefferrer(true);\r\n        }\r\n      }, roomName);\r\n\r\n      connection.send(\r\n        JSON.stringify({\r\n          type: \"create_room\",\r\n          roomName: window.$roomName,\r\n          name: window.$name,\r\n          filters: window.hasOwnProperty(\"$filters\") ? window.$filters : null,\r\n          time: window.$time,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      alert(\"Please refresh and try again\");\r\n    }\r\n  }\r\n  function handleRoomNameChange(e) {\r\n    setRoomName(e.target.value);\r\n  }\r\n\r\n  async function handleData(data) {\r\n    window.$filters = data;\r\n    try{\r\n      document.getElementById('ready-btn').disabled=true;\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n    connection.send(\r\n      JSON.stringify({\r\n        type: \"Apply_filter\",\r\n        roomName: window.$roomName,\r\n        filters: window.$filters,\r\n        time: window.$time,\r\n      })\r\n    );\r\n    connection.onmessage = (message) => {\r\n      if (message.data == \"Applied!\") { \r\n        alert(\"Applied!\");\r\n        try{\r\n          document.getElementById('ready-btn').disabled=false;\r\n        }catch(err){\r\n          console.log(err);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  function logout() {\r\n    methods.videoStop();\r\n    localStorage.removeItem(\"jwtToken\");\r\n  }\r\n\r\n  return refferrer === true ? (\r\n    <Redirect to=\"contest\" />\r\n  ) : (\r\n    <Grid container direction=\"column\">\r\n      <Grid item container>\r\n        <Grid item sm={4}></Grid>\r\n        <Grid item container sm={4}>\r\n          <Grid container>\r\n            <Grid item sm={8}>\r\n              <TextField\r\n                id=\"room-name\"\r\n                label=\"Room Name\"\r\n                onChange={handleRoomNameChange}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item sm={2}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                name=\"startBtn\"\r\n                type=\"submit\"\r\n                onClick={call}\r\n              >\r\n                Start\r\n              </Button>\r\n            </Grid>\r\n            <Grid item sm={2}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                name=\"joinBtn\"\r\n                onClick={join}\r\n              >\r\n                Join\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item sm={4}>\r\n          <Grid item sm={6}>\r\n            <Typography className=\"wait\">Waiting for opponent..</Typography>\r\n          </Grid>\r\n          <Grid item sm={6}>\r\n            <Link to=\"/\">\r\n              <Button id=\"logout-btn\" variant=\"contained\" onClick={logout}>\r\n                Logout\r\n              </Button>\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item container>\r\n        <Grid item container sm={6}></Grid>\r\n        <Grid item container sm={6}>\r\n          {isAdmin && <ProblemFilters handleData={handleData} />}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default StartContest;\r\n","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\GotoLogin.js",[],"C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\editorUtils.js",["166","167"],"//needs userCode, stdin\nasync function runCode(userCode, stdin, language, roomName, name) {\n  if (userCode == null || userCode == undefined) {\n    alert(\"NO program found.\");\n  } else {\n    var userData = {\n      code: userCode,\n      stdin: stdin,\n      language: language,\n      roomName: roomName,\n      username: name,\n    };\n    const output = await fetch(\"/compile\", {\n      method: \"POST\",\n      body: JSON.stringify(userData),\n    })\n      .then((res) => res.text())\n      .catch((e) => alert(\"Cannot run,try again\"));\n    return output;\n  }\n}\n\nasync function submitCode(userCode, problemCode, language, roomName, name) {\n  if (userCode == null || userCode == undefined) {\n    alert(\"NO program found.\");\n  } else {\n    var userData = {\n      userCode: userCode,\n      problemCode: problemCode,\n      language: language,\n      roomName: roomName,\n      username: name,\n    };\n    const output = await fetch(\"/submit\", {\n      method: \"POST\",\n      body: JSON.stringify(userData),\n    })\n      .then((res) => res.text())\n      .catch((e) => alert(\"Cannot submit,try again\"));\n    return output;\n  }\n}\nconst editorButtons = {\n  runCode,\n  submitCode\n}\nexport default editorButtons;\n","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\ProblemFilters.js",["168"],"import React, { useState } from \"react\";\nimport { Input, TextField, Button, Grid, Typography } from \"@material-ui/core\";\n\nfunction ProblemFilters(props) {\n  const [minDiff, setMinDiff] = useState(800);\n  const [maxDiff, setMaxDiff] = useState(3500);\n  const [minIndex, setMinIndex] = useState(\"A\");\n  const [maxIndex, setMaxIndex] = useState(\"F\");\n  const [numProblems, setNumProblems] = useState(4);\n  const [time, setTime] = useState(\"10\");\n\n  function onTimeChange(e) {\n    setTime(e.target.value);\n  }\n\n  function onMinDifficultyChange(e) {\n    setMinDiff(e.target.value);\n  }\n  function onMaxDifficultyChange(e) {\n    setMaxDiff(e.target.value);\n  }\n  function onMinIndexChange(e) {\n    setMinIndex(e.target.value);\n  }\n  function onMaxIndexChange(e) {\n    setMaxIndex(e.target.value);\n  }\n  function onNumProblemsChange(e) {\n    setNumProblems(e.target.value);\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    window.$time = time;\n    const data = { minDiff, maxDiff, minIndex, maxIndex, numProblems };\n    props.handleData(data);\n  }\n\n  return (\n    <Grid item container spacing={2}>\n      {/* rating goes from 800 to 3500 */}\n      {/* Number of questions goes from 1 to 10 */}\n      {/* Problem level goes from A to I */}\n\n      <Grid item sm={12}>\n        <Typography variant=\"h4\">Filter</Typography>\n      </Grid>\n      <Grid item sm={12}>\n        <TextField\n          name=\"time\"\n          label=\"Time (min)\"\n          value={time}\n          onChange={onTimeChange}\n        />\n      </Grid>\n      <Grid item sm={12}>\n        <TextField\n          name=\"minDiff\"\n          label=\"Min difficulty\"\n          value={minDiff}\n          onChange={onMinDifficultyChange}\n        />\n      </Grid>\n      <Grid item sm={12}>\n        <TextField\n          name=\"maxDiff\"\n          label=\"Max difficulty\"\n          value={maxDiff}\n          onChange={onMaxDifficultyChange}\n        />\n      </Grid>\n      <Grid item sm={12}>\n        <TextField\n          name=\"minIndex\"\n          label=\"Min Index\"\n          value={minIndex}\n          onChange={onMinIndexChange}\n        />\n      </Grid>\n      <Grid item sm={12}>\n        <TextField\n          name=\"maxIndex\"\n          label=\"Max Index\"\n          value={maxIndex}\n          onChange={onMaxIndexChange}\n        />\n      </Grid>\n      <Grid item sm={12}>\n        <TextField\n          name=\"numProblems\"\n          label=\"No. of Problems\"\n          value={numProblems}\n          onChange={onNumProblemsChange}\n        />\n      </Grid>\n      <Grid item sm={12}>\n        <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">\n          Apply\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default ProblemFilters;\n","C:\\Users\\Hp\\Desktop\\vs-code\\projects\\CodingDuel\\client\\src\\Components\\loginMethods\\loginUtils.js",["169"],"require(\"dotenv\").config();\r\n\r\nconst modalClick = () => {\r\n  console.log(\"Clicked!\");\r\n};\r\n\r\nconst loginUtils = {\r\n  async authenticate(callback, email, password) {\r\n    const data = {\r\n      username: email,\r\n      password: password,\r\n    };\r\n    const payload = JSON.stringify(data);\r\n    console.log(\"logging in...\");\r\n    var err = \"\";\r\n\r\n    // server is running on port 4000\r\n    // send data to login route\r\n    const response = await fetch(\"/login\", {\r\n      method: \"POST\",\r\n      body: payload,\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // if 4** then wrong credentials\r\n        if (res.status === 400 || res.status === 401) {\r\n          err = \"Wrong credentials\";\r\n          return res;\r\n        } else {\r\n          return res;\r\n        }\r\n      })\r\n      .then((res) => res.json())\r\n      .catch((error) => {\r\n        err = error;\r\n      });\r\n    if (response && response.login === true) {\r\n      try {\r\n        localStorage.setItem(\"jwtToken\", `${response.accessToken}`);\r\n        callback(true);\r\n        return;\r\n      } catch (err) {\r\n        // alert(\"Cannot set Token\");\r\n        callback(false, \"Cannot set Token\");\r\n      }\r\n    }\r\n    callback(false, err);\r\n  },\r\n};\r\nexport default loginUtils;\r\n",{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":6,"column":3,"nodeType":"176","messageId":"177","endLine":6,"endColumn":11},{"ruleId":"174","severity":1,"message":"178","line":7,"column":3,"nodeType":"176","messageId":"177","endLine":7,"endColumn":8},{"ruleId":"174","severity":1,"message":"179","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"180","line":1,"column":28,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"181","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":14},{"ruleId":"174","severity":1,"message":"175","line":2,"column":16,"nodeType":"176","messageId":"177","endLine":2,"endColumn":24},{"ruleId":"174","severity":1,"message":"182","line":3,"column":39,"nodeType":"176","messageId":"177","endLine":3,"endColumn":45},{"ruleId":"174","severity":1,"message":"183","line":1,"column":38,"nodeType":"176","messageId":"177","endLine":1,"endColumn":44},{"ruleId":"184","severity":1,"message":"185","line":66,"column":27,"nodeType":"186","messageId":"187","endLine":66,"endColumn":29},{"ruleId":"184","severity":1,"message":"188","line":66,"column":59,"nodeType":"186","messageId":"187","endLine":66,"endColumn":61},{"ruleId":"184","severity":1,"message":"188","line":78,"column":41,"nodeType":"186","messageId":"187","endLine":78,"endColumn":43},{"ruleId":"184","severity":1,"message":"188","line":84,"column":41,"nodeType":"186","messageId":"187","endLine":84,"endColumn":43},{"ruleId":"184","severity":1,"message":"185","line":91,"column":34,"nodeType":"186","messageId":"187","endLine":91,"endColumn":36},{"ruleId":"184","severity":1,"message":"188","line":91,"column":66,"nodeType":"186","messageId":"187","endLine":91,"endColumn":68},{"ruleId":"184","severity":1,"message":"188","line":97,"column":34,"nodeType":"186","messageId":"187","endLine":97,"endColumn":36},{"ruleId":"184","severity":1,"message":"185","line":98,"column":26,"nodeType":"186","messageId":"187","endLine":98,"endColumn":28},{"ruleId":"189","severity":1,"message":"190","line":114,"column":6,"nodeType":"191","endLine":114,"endColumn":8,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":136,"column":25,"nodeType":"195","messageId":"196","endLine":136,"endColumn":26,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":168,"column":9,"nodeType":"176","messageId":"200","endLine":168,"endColumn":14},{"ruleId":"174","severity":1,"message":"179","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"201","line":1,"column":28,"nodeType":"176","messageId":"177","endLine":1,"endColumn":37},{"ruleId":"174","severity":1,"message":"179","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"202","line":8,"column":13,"nodeType":"203","endLine":15,"endColumn":4},{"ruleId":"184","severity":1,"message":"188","line":20,"column":19,"nodeType":"186","messageId":"187","endLine":20,"endColumn":21},{"ruleId":"174","severity":1,"message":"179","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"202","line":8,"column":13,"nodeType":"203","endLine":17,"endColumn":4},{"ruleId":"184","severity":1,"message":"188","line":23,"column":19,"nodeType":"186","messageId":"187","endLine":23,"endColumn":21},{"ruleId":"174","severity":1,"message":"179","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"180","line":1,"column":28,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"204","line":3,"column":3,"nodeType":"176","messageId":"177","endLine":3,"endColumn":7},{"ruleId":"174","severity":1,"message":"205","line":4,"column":3,"nodeType":"176","messageId":"177","endLine":4,"endColumn":9},{"ruleId":"174","severity":1,"message":"206","line":5,"column":3,"nodeType":"176","messageId":"177","endLine":5,"endColumn":10},{"ruleId":"174","severity":1,"message":"207","line":6,"column":3,"nodeType":"176","messageId":"177","endLine":6,"endColumn":13},{"ruleId":"174","severity":1,"message":"182","line":7,"column":3,"nodeType":"176","messageId":"177","endLine":7,"endColumn":9},{"ruleId":"208","severity":1,"message":"209","line":53,"column":5,"nodeType":"210","messageId":"211","endLine":126,"endColumn":6},{"ruleId":"184","severity":1,"message":"188","line":91,"column":25,"nodeType":"186","messageId":"187","endLine":91,"endColumn":27},{"ruleId":"184","severity":1,"message":"188","line":97,"column":20,"nodeType":"186","messageId":"187","endLine":97,"endColumn":22},{"ruleId":"184","severity":1,"message":"188","line":113,"column":20,"nodeType":"186","messageId":"187","endLine":113,"endColumn":22},{"ruleId":"184","severity":1,"message":"188","line":199,"column":38,"nodeType":"186","messageId":"187","endLine":199,"endColumn":40},{"ruleId":"184","severity":1,"message":"188","line":200,"column":38,"nodeType":"186","messageId":"187","endLine":200,"endColumn":40},{"ruleId":"184","severity":1,"message":"188","line":423,"column":39,"nodeType":"186","messageId":"187","endLine":423,"endColumn":41},{"ruleId":"184","severity":1,"message":"188","line":424,"column":39,"nodeType":"186","messageId":"187","endLine":424,"endColumn":41},{"ruleId":"174","severity":1,"message":"212","line":465,"column":13,"nodeType":"176","messageId":"177","endLine":465,"endColumn":31},{"ruleId":"184","severity":1,"message":"188","line":639,"column":17,"nodeType":"186","messageId":"187","endLine":639,"endColumn":19},{"ruleId":"184","severity":1,"message":"188","line":651,"column":17,"nodeType":"186","messageId":"187","endLine":651,"endColumn":19},{"ruleId":"174","severity":1,"message":"179","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"213","severity":1,"message":"214","line":4,"column":10,"nodeType":"215","endLine":4,"endColumn":25},{"ruleId":"174","severity":1,"message":"179","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"184","severity":1,"message":"188","line":61,"column":21,"nodeType":"186","messageId":"187","endLine":61,"endColumn":23},{"ruleId":"184","severity":1,"message":"188","line":64,"column":28,"nodeType":"186","messageId":"187","endLine":64,"endColumn":30},{"ruleId":"184","severity":1,"message":"188","line":65,"column":26,"nodeType":"186","messageId":"187","endLine":65,"endColumn":28},{"ruleId":"184","severity":1,"message":"188","line":103,"column":25,"nodeType":"186","messageId":"187","endLine":103,"endColumn":27},{"ruleId":"174","severity":1,"message":"183","line":1,"column":28,"nodeType":"176","messageId":"177","endLine":1,"endColumn":34},{"ruleId":"174","severity":1,"message":"216","line":9,"column":3,"nodeType":"176","messageId":"177","endLine":9,"endColumn":7},{"ruleId":"174","severity":1,"message":"217","line":10,"column":3,"nodeType":"176","messageId":"177","endLine":10,"endColumn":14},{"ruleId":"174","severity":1,"message":"218","line":11,"column":3,"nodeType":"176","messageId":"177","endLine":11,"endColumn":12},{"ruleId":"174","severity":1,"message":"219","line":20,"column":5,"nodeType":"176","messageId":"177","endLine":20,"endColumn":13},{"ruleId":"174","severity":1,"message":"220","line":21,"column":5,"nodeType":"176","messageId":"177","endLine":21,"endColumn":9},{"ruleId":"174","severity":1,"message":"221","line":32,"column":9,"nodeType":"176","messageId":"177","endLine":32,"endColumn":16},{"ruleId":"189","severity":1,"message":"190","line":54,"column":6,"nodeType":"191","endLine":54,"endColumn":8,"suggestions":"222"},{"ruleId":"184","severity":1,"message":"188","line":83,"column":15,"nodeType":"186","messageId":"187","endLine":83,"endColumn":17},{"ruleId":"184","severity":1,"message":"188","line":107,"column":15,"nodeType":"186","messageId":"187","endLine":107,"endColumn":17},{"ruleId":"184","severity":1,"message":"188","line":145,"column":24,"nodeType":"186","messageId":"187","endLine":145,"endColumn":26},{"ruleId":"184","severity":1,"message":"188","line":3,"column":36,"nodeType":"186","messageId":"187","endLine":3,"endColumn":38},{"ruleId":"184","severity":1,"message":"188","line":24,"column":36,"nodeType":"186","messageId":"187","endLine":24,"endColumn":38},{"ruleId":"174","severity":1,"message":"223","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":15},{"ruleId":"174","severity":1,"message":"224","line":3,"column":7,"nodeType":"176","messageId":"177","endLine":3,"endColumn":17},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Component' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'useRef' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'start'. Either include it or remove the dependency array.","ArrayExpression",["227"],"no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["228","229"],"no-redeclare","'timer' is already defined.","redeclared","'useEffect' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Grid' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'dataChannelOptions' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Card' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'problems' is defined but never used.","'time' is defined but never used.","'classes' is assigned a value but never used.",["230"],"'Input' is defined but never used.","'modalClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"231","fix":"232"},{"messageId":"233","fix":"234","desc":"235"},{"messageId":"236","fix":"237","desc":"238"},{"desc":"231","fix":"239"},"Update the dependencies array to be: [start]",{"range":"240","text":"241"},"removeEscape",{"range":"242","text":"243"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"244","text":"245"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"246","text":"241"},[3667,3669],"[start]",[4368,4369],"",[4368,4368],"\\",[1387,1389]]